- name: Create config folder
  ansible.builtin.file:
    path: /var/lib/jenkins/configuration-as-code/
    state: directory
  become: true

- name: Copy config file
  ansible.builtin.template:
    src: ../files/jenkins.yml
    dest: /var/lib/jenkins/configuration-as-code/jenkins.yml
    mode: u=rw,g=r,o=r
  become: true

- name: Copy groovy file
  ansible.builtin.copy:
    src: ../files/job_dsl.groovy
    dest: /usr/local/job_dsl.groovy
    mode: u=rw,g=r,o=r
  become: true

- name: 

- name: Install the Jenkins apt repository key is installed
  ansible.builtin.apt_key:
    url: https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
    state: present
  become: true

- name: ensure the repository is configured
  ansible.builtin.apt_repository:
    repo: deb https://pkg.jenkins.io/debian binary/
    state: present
  become: true

- name: Install java
  ansible.builtin.apt:
    pkg:
      - fontconfig
      - openjdk-17-jre
  become: true

- name: Install Jenkins
  ansible.builtin.apt:
    pkg:
      - jenkins
  become: true
  register: install_jenkins

- name: Remove Jenkins wizard
  ansible.builtin.lineinfile:
    dest=/usr/lib/systemd/system/jenkins.service
    regexp='^Environment="JAVA_OPTS=-Djava.awt.headless=true'
    line='Environment="JAVA_OPTS=-Djava.awt.headless=true -Djenkins.install.runSetupWizard=false"\nEnvironment="CASC_JENKINS_CONFIG=/var/lib/jenkins/configuration-as-code/jenkins.yml"'
  register: result_skip_startup_wizard
  become: true
  when: install_jenkins is changed # Only change one time

- name: Copy Job file
  ansible.builtin.copy:
    path: ../files/job.sh
    dest: /var/lib/jenkins/
    mode: u=rw,g=r,o=r
  become: true

- name: Create Images folder
  ansible.builtin.file:
    path: /var/lib/jenkins/images
    state: directory
  become: true

- name: Copy docker image
  ansible.builtin.copy:
    src: ../../../../images/
    dest: /var/lib/jenkins/images
    mode: u=rw,g=r,o=r
  become: true

- name: Set jenkins to docker
  shell: "usermod -a -G docker jenkins"
  args:
    executable: /bin/bash
  become: true

- name: Start Jenkins
  ansible.builtin.service:
    name: jenkins
    state: started
    daemon_reload: true
  become : true

- name: Download Jenkins CLI jar
  ansible.builtin.get_url:
    url: "http://localhost:8080/jnlpJars/jenkins-cli.jar"
    dest: /opt/jenkins-cli.jar
  become: true
  register: download_jenkins_cli

- name: Get basic auth password
  ansible.builtin.shell: cat /var/lib/jenkins/secrets/initialAdminPassword
  register: default_password
  become: true
  when: download_jenkins_cli is changed

- name: Install plugins
  ansible.builtin.shell: "java -jar /opt/jenkins-cli.jar -s http://localhost:8080/ -auth admin:{{ default_password.stdout }} install-plugin {{ lookup('file', '../files/plugins.txt') | regex_replace('\n', ' ') }}"
  become: true
  when: download_jenkins_cli is changed

- name: Restart Jenkins
  ansible.builtin.service:
    name: jenkins
    state: restarted
    daemon_reload: true
  become : true
  # when: download_jenkins_cli is changed
  # The previous line should be removed if the goal is to reach 100% of idempotency.